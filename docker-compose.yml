# Dragify AI Agent - Real Estate Lead Processing System
# This docker-compose file sets up the complete application stack:
# - PostgreSQL database for data persistence
# - FastAPI backend with AI agent orchestration
# - Next.js frontend dashboard
# - Session-based authentication for multi-user support

services:
  # PostgreSQL Database Service
  # Stores teams, event logs, and project data
  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER:     ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB:       ${POSTGRES_DB:-mydb}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dragify-network

  # FastAPI Backend Service
  # Handles API requests, OAuth integrations, and AI agent orchestration
  # Integrates with Slack, Zoho CRM, and Gmail
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    env_file:
      - .env
    environment:
      # Point SQLAlchemy at the Postgres container
      DATABASE_URL: "postgresql+asyncpg://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-mydb}"

      # Slack
      SLACK_SIGNING_SECRET:  ${SLACK_SIGNING_SECRET}
      SLACK_CLIENT_ID:       ${SLACK_CLIENT_ID}
      SLACK_CLIENT_SECRET:   ${SLACK_CLIENT_SECRET}
      SLACK_REDIRECT_URI:    ${SLACK_REDIRECT_URI}

      # Groq LLM
      GROQ_API_KEY:          ${GROQ_API_KEY}

      # Zoho
      ZOHO_CLIENT_ID:        ${ZOHO_CLIENT_ID}
      ZOHO_CLIENT_SECRET:    ${ZOHO_CLIENT_SECRET}
      ZOHO_REDIRECT_URI:     ${ZOHO_REDIRECT_URI}

      # Gmail
      GMAIL_CLIENT_ID:       ${GMAIL_CLIENT_ID}
      GMAIL_CLIENT_SECRET:   ${GMAIL_CLIENT_SECRET}
      GMAIL_REDIRECT_URI:    ${GMAIL_REDIRECT_URI}
      ADMIN_EMAIL:           ${ADMIN_EMAIL}
      FROM_EMAIL:            ${FROM_EMAIL}
    networks:
      - dragify-network

  # Next.js Frontend Service
  # React dashboard with real-time WebSocket updates
  # Provides session-based authentication and OAuth management UI
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    depends_on:
      - backend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: https://b63d-156-194-236-142.ngrok-free.app
    networks:
      - dragify-network
    command: sh -c "npm install && npm run dev"

volumes:
  pgdata:

networks:
  dragify-network:
    driver: bridge
